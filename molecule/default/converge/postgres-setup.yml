---
- name: Wait for PostgreSQL to be fully ready
  postgresql_ping:
    login_db: postgres
    login_user: postgres
  become_user: postgres
  retries: 10
  delay: 5

- name: Create sample table in test database
  postgresql_query:
    login_db: testdb
    login_user: postgres
    query: |
      CREATE TABLE IF NOT EXISTS sample_data (
        id SERIAL PRIMARY KEY,
        name VARCHAR(100),
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        value INTEGER
      );
  become_user: postgres

- name: Insert sample data
  postgresql_query:
    login_db: testdb
    login_user: postgres
    query: |
      INSERT INTO sample_data (name, value) 
      SELECT 
        'test_record_' || generate_series(1, 100),
        (random() * 1000)::integer
      ON CONFLICT DO NOTHING;
  become_user: postgres

- name: Grant basic permissions to pgexporter
  postgresql_query:
    login_db: postgres
    login_user: postgres
    query: |
      GRANT CONNECT ON DATABASE postgres TO pgexporter;
      GRANT CONNECT ON DATABASE testdb TO pgexporter;
  become_user: postgres

- name: Grant schema usage permissions
  postgresql_query:
    login_db: postgres
    login_user: postgres
    query: |
      GRANT USAGE ON SCHEMA public TO pgexporter;
      GRANT USAGE ON SCHEMA information_schema TO pgexporter;
  become_user: postgres

- name: Grant select permissions on system tables
  postgresql_query:
    login_db: postgres
    login_user: postgres
    query: |
      GRANT SELECT ON ALL TABLES IN SCHEMA information_schema TO pgexporter;
      GRANT SELECT ON ALL TABLES IN SCHEMA pg_catalog TO pgexporter;
  become_user: postgres

- name: Grant pgexporter permissions on testdb
  postgresql_query:
    login_db: testdb
    login_user: postgres
    query: |
      GRANT USAGE ON SCHEMA public TO pgexporter;
      GRANT SELECT ON ALL TABLES IN SCHEMA public TO pgexporter;
      GRANT SELECT ON ALL SEQUENCES IN SCHEMA public TO pgexporter;
  become_user: postgres

- name: Test pgexporter connection to postgres database
  postgresql_query:
    login_db: postgres
    login_user: pgexporter
    login_password: "{{ vault_exporter_password }}"
    login_host: localhost
    query: "SELECT 1 as connection_test"
  register: pg_exporter_postgres_test

- name: Display pgexporter postgres connection test
  debug:
    msg: "pgexporter connection to postgres DB: {{ 'SUCCESS' if pg_exporter_postgres_test is not failed else 'FAILED' }}"

- name: Test pgexporter connection to testdb
  postgresql_query:
    login_db: testdb
    login_user: pgexporter
    login_password: "{{ vault_exporter_password }}"
    login_host: localhost
    query: "SELECT count(*) as record_count FROM sample_data"
  register: pg_exporter_testdb_test

- name: Display pgexporter testdb connection test
  debug:
    msg: "pgexporter connection to testdb: {{ 'SUCCESS' if pg_exporter_testdb_test is not failed else 'FAILED' }}"

- name: Restart postgres_exporter service
  systemd:
    name: postgres_exporter
    state: restarted
  when: pg_exporter_postgres_test is not failed

- name: Wait for postgres_exporter to initialize
  pause:
    seconds: 15