---
scenario:
  name: default
  test_sequence:
    - dependency
    - create
    - prepare
    - converge
    - verify
    - destroy

dependency:
  name: galaxy
  options:
    requirements-file: requirements.yml

driver:
  name: docker

platforms:
  - name: monitoring-server
    image: ${DOCKER_IMAGE:-geerlingguy/docker-ubuntu2004-ansible}:${DOCKER_TAG:-latest}
    pre_build_image: true
    privileged: true
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    cgroupns_mode: host
    command: "/lib/systemd/systemd"
    tmpfs:
      - /run
      - /tmp
    capabilities:
      - SYS_ADMIN
    groups:
      - monitoring_server
    networks:
      - name: prometheus-net
    published_ports:
      - "9090:9090"  # Prometheus
      - "3000:3000"  # Grafana
      - "9093:9093"  # AlertManager

  - name: postgres-server
    image: ${DOCKER_IMAGE:-geerlingguy/docker-ubuntu2004-ansible}:${DOCKER_TAG:-latest}
    pre_build_image: true
    privileged: true
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    cgroupns_mode: host
    command: "/lib/systemd/systemd"
    tmpfs:
      - /run
      - /tmp
    capabilities:
      - SYS_ADMIN
    groups:
      - database_server
    networks:
      - name: prometheus-net
    published_ports:
      - "5432:5432"  # PostgreSQL
      - "9187:9187"  # Postgres Exporter

provisioner:
  name: ansible
  config_options:
    defaults:
      interpreter_python: auto_silent
      callback_whitelist: profile_tasks, timer
      callback_result_format: yaml
      callback_format_pretty: false
      host_key_checking: false
  env:
    ANSIBLE_ROLES_PATH: ../../roles
  inventory:
    group_vars:
      all:
        # Vault passwords for testing (use proper vault in production)
        vault_postgres_password: "testpassword123"
        vault_exporter_password: "exporterpass123"
        vault_grafana_password: "grafanapass123"
      database_server:
        postgresql_databases:
          - name: testdb
        postgresql_users:
          - name: testuser
            password: "{{ vault_postgres_password }}"
            db: testdb
            priv: "ALL"
          - name: pgexporter
            password: "{{ vault_exporter_password }}"
            db: postgres
            priv: "CONNECT"
            role_attr_flags: "NOSUPERUSER,NOCREATEDB,NOCREATEROLE"

verifier:
  name: ansible

lint: |
  set -e
  yamllint .
  ansible-lint