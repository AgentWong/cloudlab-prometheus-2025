# =============================================================================
# templates/prometheus.yml.j2 - Main Prometheus configuration template
# =============================================================================

# {{ ansible_managed }}
# Prometheus configuration file
# Generated by Ansible prometheus role

global:
{% for key, value in prometheus_global_config.items() %}
  {{ key }}: {{ value }}
{% endfor %}

# Rule files specifies a list of rule files to load
rule_files:
{% for rule_file in prometheus_rule_files %}
  - "{{ rule_file }}"
{% endfor %}

# Alertmanager configuration
{% if prometheus_alertmanager_config | length > 0 %}
alerting:
  alertmanagers:
{% for alertmanager in prometheus_alertmanager_config %}
    - static_configs:
        - targets:
{% for target in alertmanager.static_configs[0].targets %}
            - {{ target }}
{% endfor %}
{% if alertmanager.scheme is defined %}
      scheme: {{ alertmanager.scheme }}
{% endif %}
{% if alertmanager.path_prefix is defined %}
      path_prefix: {{ alertmanager.path_prefix }}
{% endif %}
{% if alertmanager.basic_auth is defined %}
      basic_auth:
        username: {{ alertmanager.basic_auth.username }}
        password: {{ alertmanager.basic_auth.password }}
{% endif %}
{% if alertmanager.tls_config is defined %}
      tls_config:
{% for key, value in alertmanager.tls_config.items() %}
        {{ key }}: {{ value }}
{% endfor %}
{% endif %}
{% endfor %}
{% endif %}

# Scrape configuration
scrape_configs:
{% for scrape_config in prometheus_scrape_configs %}
  - job_name: '{{ scrape_config.job_name }}'
{% if scrape_config.scrape_interval is defined %}
    scrape_interval: {{ scrape_config.scrape_interval }}
{% endif %}
{% if scrape_config.scrape_timeout is defined %}
    scrape_timeout: {{ scrape_config.scrape_timeout }}
{% endif %}
{% if scrape_config.metrics_path is defined %}
    metrics_path: {{ scrape_config.metrics_path }}
{% endif %}
{% if scrape_config.scheme is defined %}
    scheme: {{ scrape_config.scheme }}
{% endif %}
{% if scrape_config.honor_labels is defined %}
    honor_labels: {{ scrape_config.honor_labels | lower }}
{% endif %}
{% if scrape_config.honor_timestamps is defined %}
    honor_timestamps: {{ scrape_config.honor_timestamps | lower }}
{% endif %}
{% if scrape_config.params is defined %}
    params:
{% for key, value in scrape_config.params.items() %}
      {{ key }}:
{% if value is string %}
        - {{ value }}
{% else %}
{% for v in value %}
        - {{ v }}
{% endfor %}
{% endif %}
{% endfor %}
{% endif %}
{% if scrape_config.basic_auth is defined %}
    basic_auth:
      username: {{ scrape_config.basic_auth.username }}
      password: {{ scrape_config.basic_auth.password }}
{% endif %}
{% if scrape_config.bearer_token is defined %}
    bearer_token: {{ scrape_config.bearer_token }}
{% endif %}
{% if scrape_config.bearer_token_file is defined %}
    bearer_token_file: {{ scrape_config.bearer_token_file }}
{% endif %}
{% if scrape_config.tls_config is defined %}
    tls_config:
{% for key, value in scrape_config.tls_config.items() %}
      {{ key }}: {{ value }}
{% endfor %}
{% endif %}
{% if scrape_config.static_configs is defined %}
    static_configs:
{% for static_config in scrape_config.static_configs %}
      - targets:
{% for target in static_config.targets %}
          - {{ target }}
{% endfor %}
{% if static_config.labels is defined %}
        labels:
{% for key, value in static_config.labels.items() %}
          {{ key }}: {{ value }}
{% endfor %}
{% endif %}
{% endfor %}
{% endif %}
{% if scrape_config.file_sd_configs is defined %}
    file_sd_configs:
{% for file_sd_config in scrape_config.file_sd_configs %}
      - files:
{% for file in file_sd_config.files %}
          - {{ file }}
{% endfor %}
{% if file_sd_config.refresh_interval is defined %}
        refresh_interval: {{ file_sd_config.refresh_interval }}
{% endif %}
{% endfor %}
{% endif %}
{% if scrape_config.relabel_configs is defined %}
    relabel_configs:
{% for relabel_config in scrape_config.relabel_configs %}
      - source_labels: {{ relabel_config.source_labels }}
        target_label: {{ relabel_config.target_label }}
{% if relabel_config.regex is defined %}
        regex: {{ relabel_config.regex }}
{% endif %}
{% if relabel_config.replacement is defined %}
        replacement: {{ relabel_config.replacement }}
{% endif %}
{% if relabel_config.action is defined %}
        action: {{ relabel_config.action }}
{% endif %}
{% endfor %}
{% endif %}
{% if scrape_config.metric_relabel_configs is defined %}
    metric_relabel_configs:
{% for metric_relabel_config in scrape_config.metric_relabel_configs %}
      - source_labels: {{ metric_relabel_config.source_labels }}
        target_label: {{ metric_relabel_config.target_label }}
{% if metric_relabel_config.regex is defined %}
        regex: {{ metric_relabel_config.regex }}
{% endif %}
{% if metric_relabel_config.replacement is defined %}
        replacement: {{ metric_relabel_config.replacement }}
{% endif %}
{% if metric_relabel_config.action is defined %}
        action: {{ metric_relabel_config.action }}
{% endif %}
{% endfor %}
{% endif %}

{% endfor %}

# Remote write configuration
{% if prometheus_remote_write | length > 0 %}
remote_write:
{% for remote_write_config in prometheus_remote_write %}
  - url: {{ remote_write_config.url }}
{% if remote_write_config.name is defined %}
    name: {{ remote_write_config.name }}
{% endif %}
{% if remote_write_config.remote_timeout is defined %}
    remote_timeout: {{ remote_write_config.remote_timeout }}
{% endif %}
{% if remote_write_config.write_relabel_configs is defined %}
    write_relabel_configs:
{% for write_relabel_config in remote_write_config.write_relabel_configs %}
      - source_labels: {{ write_relabel_config.source_labels }}
        target_label: {{ write_relabel_config.target_label }}
{% if write_relabel_config.regex is defined %}
        regex: {{ write_relabel_config.regex }}
{% endif %}
{% if write_relabel_config.replacement is defined %}
        replacement: {{ write_relabel_config.replacement }}
{% endif %}
{% if write_relabel_config.action is defined %}
        action: {{ write_relabel_config.action }}
{% endif %}
{% endfor %}
{% endif %}
{% if remote_write_config.basic_auth is defined %}
    basic_auth:
      username: {{ remote_write_config.basic_auth.username }}
      password: {{ remote_write_config.basic_auth.password }}
{% endif %}
{% if remote_write_config.bearer_token is defined %}
    bearer_token: {{ remote_write_config.bearer_token }}
{% endif %}
{% if remote_write_config.bearer_token_file is defined %}
    bearer_token_file: {{ remote_write_config.bearer_token_file }}
{% endif %}
{% if remote_write_config.tls_config is defined %}
    tls_config:
{% for key, value in remote_write_config.tls_config.items() %}
      {{ key }}: {{ value }}
{% endfor %}
{% endif %}
{% if remote_write_config.headers is defined %}
    headers:
{% for key, value in remote_write_config.headers.items() %}
      {{ key }}: {{ value }}
{% endfor %}
{% endif %}
{% endfor %}
{% endif %}

# Remote read configuration
{% if prometheus_remote_read | length > 0 %}
remote_read:
{% for remote_read_config in prometheus_remote_read %}
  - url: {{ remote_read_config.url }}
{% if remote_read_config.name is defined %}
    name: {{ remote_read_config.name }}
{% endif %}
{% if remote_read_config.remote_timeout is defined %}
    remote_timeout: {{ remote_read_config.remote_timeout }}
{% endif %}
{% if remote_read_config.read_recent is defined %}
    read_recent: {{ remote_read_config.read_recent | lower }}
{% endif %}
{% if remote_read_config.basic_auth is defined %}
    basic_auth:
      username: {{ remote_read_config.basic_auth.username }}
      password: {{ remote_read_config.basic_auth.password }}
{% endif %}
{% if remote_read_config.bearer_token is defined %}
    bearer_token: {{ remote_read_config.bearer_token }}
{% endif %}
{% if remote_read_config.bearer_token_file is defined %}
    bearer_token_file: {{ remote_read_config.bearer_token_file }}
{% endif %}
{% if remote_read_config.tls_config is defined %}
    tls_config:
{% for key, value in remote_read_config.tls_config.items() %}
      {{ key }}: {{ value }}
{% endfor %}
{% endif %}
{% endfor %}
{% endif %}